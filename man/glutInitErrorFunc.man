.\"
.\" Copyright (c) FreeGLUT contributors, 2000-2025.
.\"
.\" See the file "man/LICENSE" for information on usage and redistribution
.\"
.TH glutInitErrorFunc 3GLUT "3.8" "FreeGLUT" "FreeGLUT"
.SH NAME
glutInitErrorFunc, glutInitWarningFunc - set error and warning handler callbacks.
.SH SYNTAX
.nf
.LP
void glutInitErrorFunc(void (*callback)(const char *fmt, va_list ap));
void glutInitWarningFunc(void (*callback)(const char *fmt, va_list ap));
.fi
.SH ARGUMENTS
.IP \fIcallback\fP 1i
The error or warning handler callback function.
.IP \fIfmt\fP 1i
The format string passed to the callback.
.IP \fIap\fP 1i
The variable argument list passed to the callback.
.SH DESCRIPTION
glutInitErrorFunc and glutInitWarningFunc set the global error and warning handler callbacks, respectively. These functions allow applications to customize the handling of error and warning messages generated by FreeGLUT.

By default, FreeGLUT prints error messages to stderr and exits the application when an error occurs. Warning messages are printed to stderr but execution continues. By using these functions, applications can override this behavior to handle errors and warnings in a custom way, such as logging them to a file, displaying them in a dialog box, or silently ignoring them.

The callbacks receive a format string and a va_list argument, similar to vprintf. The application is responsible for formatting the message appropriately.

If glutInitErrorFunc is called with a NULL callback, FreeGLUT restores the default error handler. Similarly, if glutInitWarningFunc is called with a NULL callback, FreeGLUT restores the default warning handler.

These functions are FreeGLUT extensions and are not available in the original GLUT library.

.SH EXAMPLE
.nf
void errorHandler(const char *fmt, va_list ap)
{
    char buffer[1024];
    vsnprintf(buffer, sizeof(buffer), fmt, ap);

    /* Log the error to a file */
    FILE *log = fopen("freeglut-errors.log", "a");
    if (log) {
        fprintf(log, "ERROR: %s\\n", buffer);
        fclose(log);
    }

    /* Display error to user */
    fprintf(stderr, "FreeGLUT Error: %s\\n", buffer);

    /* Terminate the application gracefully */
    exit(1);
}

void warningHandler(const char *fmt, va_list ap)
{
    char buffer[1024];
    vsnprintf(buffer, sizeof(buffer), fmt, ap);

    /* Log the warning to a file */
    FILE *log = fopen("freeglut-warnings.log", "a");
    if (log) {
        fprintf(log, "WARNING: %s\\n", buffer);
        fclose(log);
    }

    /* Optionally display warning to user */
    fprintf(stderr, "FreeGLUT Warning: %s\\n", buffer);
}

/* In initialization code, before glutInit */
glutInitErrorFunc(errorHandler);
glutInitWarningFunc(warningHandler);
.fi

.SH SEE ALSO
glutInit, glutReportErrors
.SH AUTHOR
FreeGLUT contributors